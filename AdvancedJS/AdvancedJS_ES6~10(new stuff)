ES 6
Symbol
let sym1 = Symbol();
let sym2 = Symbol('foo');
let sym3 = Symbol('foo');
sym2 === sym3 -> false
- pretty much only used for object name(creates unique identifier)

ES 7
const square = x => x**2 (means x^2)

ES 8
1. padStart(), padEnd()
'test'.padStart(10)
"      test" -> 10 spaces from front including the string

2. ending comma in parameter list in functions are valid now
const fun = (a, b, c, d,) => {}
fun(1, 2, 3, 4,)

ES 10
1. flat() - default to one level 
flat(2) flattens two levels of array 
Or flat(99) to flatten the utmost level 
You can also use flat to get rid of empty data spots 
[1, 2,,,,,,,,3].flat() becomes [1,2,3] 


2. flatmap is map function but flattens result to the depth of one 

3. fromentries 
Opposite of entries() so it makes objects 


*iterating over iterable objects(arrays and strings) : iterating 
Iterating over object properties: enumerating 
Properties in object are called enumerable 
And because everything in js is an object. Arrays are enumerable 


